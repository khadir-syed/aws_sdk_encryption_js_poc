"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
var ie11RandomValues_1 = require("./ie11RandomValues");
exports.ie11RandomValues = ie11RandomValues_1.randomValues;
var webCryptoRandomValues_1 = require("./webCryptoRandomValues");
exports.webCryptoRandomValues = webCryptoRandomValues_1.randomValues;
var ie11_detection_1 = require("@aws-crypto/ie11-detection");
var supports_web_crypto_1 = require("@aws-crypto/supports-web-crypto");
var util_locate_window_1 = require("@aws-sdk/util-locate-window");
function randomValues(byteLength) {
    // Find the global scope for this runtime
    var globalScope = util_locate_window_1.locateWindow();
    if (supports_web_crypto_1.supportsWebCrypto(globalScope)) {
        return webCryptoRandomValues_1.randomValues(byteLength);
    }
    else if (ie11_detection_1.isMsWindow(globalScope)) {
        return ie11RandomValues_1.randomValues(byteLength);
    }
    return Promise.reject(new Error("Unable to locate a secure random source."));
}
exports.randomValues = randomValues;
function randomValuesOnly(byteLength) {
    // Find the global scope for this runtime
    var globalScope = util_locate_window_1.locateWindow();
    if (supports_web_crypto_1.supportsSecureRandom(globalScope)) {
        return webCryptoRandomValues_1.randomValues(byteLength);
    }
    else if (ie11_detection_1.isMsWindow(globalScope)) {
        return ie11RandomValues_1.randomValues(byteLength);
    }
    return Promise.reject(new Error("Unable to locate a secure random source."));
}
exports.randomValuesOnly = randomValuesOnly;
//# sourceMappingURL=index.js.map