import { CachingMaterialsManager, CachingMaterialsManagerInput, // eslint-disable-line no-unused-vars
CryptographicMaterialsCache } from '@aws-crypto/cache-material';
import { WebCryptoMaterialsManager, WebCryptoAlgorithmSuite, WebCryptoGetEncryptionMaterials, // eslint-disable-line no-unused-vars
WebCryptoGetDecryptMaterials } from '@aws-crypto/material-management-browser';
export declare class WebCryptoCachingMaterialsManager implements CachingMaterialsManager<WebCryptoAlgorithmSuite> {
    readonly _cache: CryptographicMaterialsCache<WebCryptoAlgorithmSuite>;
    readonly _backingMaterialsManager: WebCryptoMaterialsManager;
    readonly _partition: string;
    readonly _maxBytesEncrypted: number;
    readonly _maxMessagesEncrypted: number;
    readonly _maxAge: number;
    constructor(input: CachingMaterialsManagerInput<WebCryptoAlgorithmSuite>);
    getEncryptionMaterials: WebCryptoGetEncryptionMaterials;
    decryptMaterials: WebCryptoGetDecryptMaterials;
    _cacheEntryHasExceededLimits: import("@aws-crypto/cache-material").CacheEntryHasExceededLimits<WebCryptoAlgorithmSuite>;
}
//# sourceMappingURL=caching_materials_manager_browser.d.ts.map