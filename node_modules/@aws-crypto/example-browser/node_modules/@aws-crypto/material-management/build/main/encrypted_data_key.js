"use strict";
/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use
 * this file except in compliance with the License. A copy of the License is
 * located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const immutable_class_1 = require("./immutable_class");
const needs_1 = require("./needs");
class EncryptedDataKey {
    constructor(edkInput) {
        const { providerInfo, providerId, encryptedDataKey, rawInfo } = edkInput;
        needs_1.needs(typeof providerInfo === 'string' && providerInfo &&
            typeof providerId === 'string' && providerId &&
            encryptedDataKey instanceof Uint8Array && encryptedDataKey.byteLength, 'Malformed encrypted data key');
        immutable_class_1.readOnlyProperty(this, 'providerInfo', providerInfo);
        immutable_class_1.readOnlyProperty(this, 'providerId', providerId);
        immutable_class_1.readOnlyBinaryProperty(this, 'encryptedDataKey', encryptedDataKey);
        if (rawInfo instanceof Uint8Array) {
            immutable_class_1.readOnlyBinaryProperty(this, 'rawInfo', rawInfo);
        }
        else {
            immutable_class_1.readOnlyProperty(this, 'rawInfo', undefined);
        }
        Object.setPrototypeOf(this, EncryptedDataKey.prototype);
        Object.freeze(this);
    }
}
exports.EncryptedDataKey = EncryptedDataKey;
immutable_class_1.frozenClass(EncryptedDataKey);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5jcnlwdGVkX2RhdGFfa2V5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VuY3J5cHRlZF9kYXRhX2tleS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7R0FhRzs7QUFFSCx1REFBeUY7QUFDekYsbUNBQStCO0FBK0IvQixNQUFhLGdCQUFnQjtJQU0zQixZQUFhLFFBQTJCO1FBQ3RDLE1BQU0sRUFBRSxZQUFZLEVBQUUsVUFBVSxFQUFFLGdCQUFnQixFQUFFLE9BQU8sRUFBRSxHQUFHLFFBQVEsQ0FBQTtRQUN4RSxhQUFLLENBQ0gsT0FBTyxZQUFZLEtBQUssUUFBUSxJQUFJLFlBQVk7WUFDaEQsT0FBTyxVQUFVLEtBQUssUUFBUSxJQUFJLFVBQVU7WUFDNUMsZ0JBQWdCLFlBQVksVUFBVSxJQUFJLGdCQUFnQixDQUFDLFVBQVUsRUFDckUsOEJBQThCLENBQUMsQ0FBQTtRQUVqQyxrQ0FBZ0IsQ0FBQyxJQUFJLEVBQUUsY0FBYyxFQUFFLFlBQVksQ0FBQyxDQUFBO1FBQ3BELGtDQUFnQixDQUFDLElBQUksRUFBRSxZQUFZLEVBQUUsVUFBVSxDQUFDLENBQUE7UUFDaEQsd0NBQXNCLENBQUMsSUFBSSxFQUFFLGtCQUFrQixFQUFFLGdCQUFnQixDQUFDLENBQUE7UUFDbEUsSUFBSSxPQUFPLFlBQVksVUFBVSxFQUFFO1lBQ2pDLHdDQUFzQixDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsT0FBTyxDQUFDLENBQUE7U0FDakQ7YUFBTTtZQUNMLGtDQUFnQixDQUFDLElBQUksRUFBRSxTQUFTLEVBQUUsU0FBUyxDQUFDLENBQUE7U0FDN0M7UUFFRCxNQUFNLENBQUMsY0FBYyxDQUFDLElBQUksRUFBRSxnQkFBZ0IsQ0FBQyxTQUFTLENBQUMsQ0FBQTtRQUN2RCxNQUFNLENBQUMsTUFBTSxDQUFDLElBQUksQ0FBQyxDQUFBO0lBQ3JCLENBQUM7Q0FDRjtBQTFCRCw0Q0EwQkM7QUFFRCw2QkFBVyxDQUFDLGdCQUFnQixDQUFDLENBQUEifQ==