"use strict";
/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use
 * this file except in compliance with the License. A copy of the License is
 * located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
var algorithm_suites_1 = require("./algorithm_suites");
exports.AlgorithmSuiteIdentifier = algorithm_suites_1.AlgorithmSuiteIdentifier;
exports.AlgorithmSuite = algorithm_suites_1.AlgorithmSuite;
var web_crypto_algorithms_1 = require("./web_crypto_algorithms");
exports.WebCryptoAlgorithmSuite = web_crypto_algorithms_1.WebCryptoAlgorithmSuite;
var node_algorithms_1 = require("./node_algorithms");
exports.NodeAlgorithmSuite = node_algorithms_1.NodeAlgorithmSuite;
var keyring_1 = require("./keyring");
exports.Keyring = keyring_1.Keyring;
exports.KeyringNode = keyring_1.KeyringNode;
exports.KeyringWebCrypto = keyring_1.KeyringWebCrypto;
var keyring_trace_1 = require("./keyring_trace");
exports.KeyringTraceFlag = keyring_trace_1.KeyringTraceFlag;
var multi_keyring_1 = require("./multi_keyring");
exports.MultiKeyringNode = multi_keyring_1.MultiKeyringNode;
exports.MultiKeyringWebCrypto = multi_keyring_1.MultiKeyringWebCrypto;
var cryptographic_material_1 = require("./cryptographic_material");
exports.NodeEncryptionMaterial = cryptographic_material_1.NodeEncryptionMaterial;
exports.NodeDecryptionMaterial = cryptographic_material_1.NodeDecryptionMaterial;
var cryptographic_material_2 = require("./cryptographic_material");
exports.isValidCryptoKey = cryptographic_material_2.isValidCryptoKey;
exports.isCryptoKey = cryptographic_material_2.isCryptoKey;
exports.keyUsageForMaterial = cryptographic_material_2.keyUsageForMaterial;
exports.subtleFunctionForMaterial = cryptographic_material_2.subtleFunctionForMaterial;
var cryptographic_material_3 = require("./cryptographic_material");
exports.WebCryptoEncryptionMaterial = cryptographic_material_3.WebCryptoEncryptionMaterial;
exports.WebCryptoDecryptionMaterial = cryptographic_material_3.WebCryptoDecryptionMaterial;
var cryptographic_material_4 = require("./cryptographic_material");
exports.isEncryptionMaterial = cryptographic_material_4.isEncryptionMaterial;
exports.isDecryptionMaterial = cryptographic_material_4.isDecryptionMaterial;
var cryptographic_material_5 = require("./cryptographic_material");
exports.unwrapDataKey = cryptographic_material_5.unwrapDataKey;
exports.wrapWithKeyObjectIfSupported = cryptographic_material_5.wrapWithKeyObjectIfSupported;
var cryptographic_material_6 = require("./cryptographic_material");
exports.decorateCryptographicMaterial = cryptographic_material_6.decorateCryptographicMaterial;
exports.decorateWebCryptoMaterial = cryptographic_material_6.decorateWebCryptoMaterial;
var signature_key_1 = require("./signature_key");
exports.SignatureKey = signature_key_1.SignatureKey;
exports.VerificationKey = signature_key_1.VerificationKey;
var encrypted_data_key_1 = require("./encrypted_data_key");
exports.EncryptedDataKey = encrypted_data_key_1.EncryptedDataKey;
var immutable_class_1 = require("./immutable_class");
exports.immutableBaseClass = immutable_class_1.immutableBaseClass;
exports.immutableClass = immutable_class_1.immutableClass;
exports.frozenClass = immutable_class_1.frozenClass;
exports.readOnlyProperty = immutable_class_1.readOnlyProperty;
var needs_1 = require("./needs");
exports.needs = needs_1.needs;
var clone_cryptographic_material_1 = require("./clone_cryptographic_material");
exports.cloneMaterial = clone_cryptographic_material_1.cloneMaterial;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW5kZXguanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyIuLi8uLi9zcmMvaW5kZXgudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IjtBQUFBOzs7Ozs7Ozs7Ozs7O0dBYUc7O0FBRUgsdURBQWlHO0FBQXhGLHNEQUFBLHdCQUF3QixDQUFBO0FBQXNCLDRDQUFBLGNBQWMsQ0FBQTtBQU1yRSxpRUFBaUU7QUFBeEQsMERBQUEsdUJBQXVCLENBQUE7QUFDaEMscURBQXNEO0FBQTdDLCtDQUFBLGtCQUFrQixDQUFBO0FBRTNCLHFDQUFrRTtBQUF6RCw0QkFBQSxPQUFPLENBQUE7QUFBRSxnQ0FBQSxXQUFXLENBQUE7QUFBRSxxQ0FBQSxnQkFBZ0IsQ0FBQTtBQUMvQyxpREFBZ0U7QUFBekMsMkNBQUEsZ0JBQWdCLENBQUE7QUFDdkMsaURBQXlFO0FBQWhFLDJDQUFBLGdCQUFnQixDQUFBO0FBQUUsZ0RBQUEscUJBQXFCLENBQUE7QUFHaEQsbUVBQXlGO0FBQWhGLDBEQUFBLHNCQUFzQixDQUFBO0FBQUUsMERBQUEsc0JBQXNCLENBQUE7QUFDdkQsbUVBQXdIO0FBQS9HLG9EQUFBLGdCQUFnQixDQUFBO0FBQUUsK0NBQUEsV0FBVyxDQUFBO0FBQUUsdURBQUEsbUJBQW1CLENBQUE7QUFBRSw2REFBQSx5QkFBeUIsQ0FBQTtBQUN0RixtRUFBbUc7QUFBMUYsK0RBQUEsMkJBQTJCLENBQUE7QUFBRSwrREFBQSwyQkFBMkIsQ0FBQTtBQUNqRSxtRUFBcUY7QUFBNUUsd0RBQUEsb0JBQW9CLENBQUE7QUFBRSx3REFBQSxvQkFBb0IsQ0FBQTtBQUNuRCxtRUFBc0Y7QUFBN0UsaURBQUEsYUFBYSxDQUFBO0FBQUUsZ0VBQUEsNEJBQTRCLENBQUE7QUFDcEQsbUVBQTZJO0FBQTdHLGlFQUFBLDZCQUE2QixDQUFBO0FBQUUsNkRBQUEseUJBQXlCLENBQUE7QUFDeEYsaURBQStEO0FBQXRELHVDQUFBLFlBQVksQ0FBQTtBQUFFLDBDQUFBLGVBQWUsQ0FBQTtBQUN0QywyREFBMEU7QUFBakUsZ0RBQUEsZ0JBQWdCLENBQUE7QUFFekIscURBQXFHO0FBQTVGLCtDQUFBLGtCQUFrQixDQUFBO0FBQUUsMkNBQUEsY0FBYyxDQUFBO0FBQUUsd0NBQUEsV0FBVyxDQUFBO0FBQUUsNkNBQUEsZ0JBQWdCLENBQUE7QUFFMUUsaUNBQStCO0FBQXRCLHdCQUFBLEtBQUssQ0FBQTtBQUNkLCtFQUE4RDtBQUFyRCx1REFBQSxhQUFhLENBQUEifQ==