"use strict";
/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use
 * this file except in compliance with the License. A copy of the License is
 * located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */
Object.defineProperty(exports, "__esModule", { value: true });
function immutableClass(ObjectClass) {
    Object.freeze(ObjectClass);
    const propertyNames = Object.getOwnPropertyNames(ObjectClass.prototype);
    propertyNames
        .filter(name => name !== 'constructor')
        .forEach(name => Object.defineProperty(ObjectClass.prototype, name, { writable: false }));
    Object.seal(ObjectClass.prototype);
    return ObjectClass;
}
exports.immutableClass = immutableClass;
function immutableBaseClass(ObjectClass) {
    Object.setPrototypeOf(ObjectClass.prototype, null);
    immutableClass(ObjectClass);
    return ObjectClass;
}
exports.immutableBaseClass = immutableBaseClass;
function frozenClass(ObjectClass) {
    Object.setPrototypeOf(ObjectClass.prototype, null);
    Object.freeze(ObjectClass.prototype);
    Object.freeze(ObjectClass);
    return ObjectClass;
}
exports.frozenClass = frozenClass;
function readOnlyBinaryProperty(obj, name, value) {
    // should this also add a zero property?
    // and should it create a local value?  maybe not.
    const safeValue = new Uint8Array(value);
    Object.defineProperty(obj, name, {
        get: () => new Uint8Array(safeValue),
        enumerable: true
    });
}
exports.readOnlyBinaryProperty = readOnlyBinaryProperty;
function readOnlyProperty(obj, name, value) {
    Object.defineProperty(obj, name, { value, enumerable: true });
}
exports.readOnlyProperty = readOnlyProperty;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiaW1tdXRhYmxlX2NsYXNzLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2ltbXV0YWJsZV9jbGFzcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7Ozs7Ozs7Ozs7Ozs7R0FhRzs7QUFFSCxTQUFnQixjQUFjLENBQUUsV0FBZ0I7SUFDOUMsTUFBTSxDQUFDLE1BQU0sQ0FBQyxXQUFXLENBQUMsQ0FBQTtJQUMxQixNQUFNLGFBQWEsR0FBRyxNQUFNLENBQUMsbUJBQW1CLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ3ZFLGFBQWE7U0FDVixNQUFNLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxJQUFJLEtBQUssYUFBYSxDQUFDO1NBQ3RDLE9BQU8sQ0FBQyxJQUFJLENBQUMsRUFBRSxDQUFDLE1BQU0sQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxJQUFJLEVBQUUsRUFBRSxRQUFRLEVBQUUsS0FBSyxFQUFFLENBQUMsQ0FBQyxDQUFBO0lBQzNGLE1BQU0sQ0FBQyxJQUFJLENBQUMsV0FBVyxDQUFDLFNBQVMsQ0FBQyxDQUFBO0lBQ2xDLE9BQU8sV0FBVyxDQUFBO0FBQ3BCLENBQUM7QUFSRCx3Q0FRQztBQUVELFNBQWdCLGtCQUFrQixDQUFFLFdBQWdCO0lBQ2xELE1BQU0sQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUNsRCxjQUFjLENBQUMsV0FBVyxDQUFDLENBQUE7SUFDM0IsT0FBTyxXQUFXLENBQUE7QUFDcEIsQ0FBQztBQUpELGdEQUlDO0FBRUQsU0FBZ0IsV0FBVyxDQUFFLFdBQWdCO0lBQzNDLE1BQU0sQ0FBQyxjQUFjLENBQUMsV0FBVyxDQUFDLFNBQVMsRUFBRSxJQUFJLENBQUMsQ0FBQTtJQUNsRCxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxTQUFTLENBQUMsQ0FBQTtJQUNwQyxNQUFNLENBQUMsTUFBTSxDQUFDLFdBQVcsQ0FBQyxDQUFBO0lBQzFCLE9BQU8sV0FBVyxDQUFBO0FBQ3BCLENBQUM7QUFMRCxrQ0FLQztBQUVELFNBQWdCLHNCQUFzQixDQUFFLEdBQVEsRUFBRSxJQUFZLEVBQUUsS0FBaUI7SUFDL0Usd0NBQXdDO0lBQ3hDLGtEQUFrRDtJQUNsRCxNQUFNLFNBQVMsR0FBRyxJQUFJLFVBQVUsQ0FBQyxLQUFLLENBQUMsQ0FBQTtJQUN2QyxNQUFNLENBQUMsY0FBYyxDQUFDLEdBQUcsRUFBRSxJQUFJLEVBQUU7UUFDL0IsR0FBRyxFQUFFLEdBQUcsRUFBRSxDQUFDLElBQUksVUFBVSxDQUFDLFNBQVMsQ0FBQztRQUNwQyxVQUFVLEVBQUUsSUFBSTtLQUNqQixDQUFDLENBQUE7QUFDSixDQUFDO0FBUkQsd0RBUUM7QUFFRCxTQUFnQixnQkFBZ0IsQ0FBd0IsR0FBTSxFQUFFLElBQU8sRUFBRSxLQUFXO0lBQ2xGLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFLElBQUksRUFBRSxFQUFFLEtBQUssRUFBRSxVQUFVLEVBQUUsSUFBSSxFQUFFLENBQUMsQ0FBQTtBQUMvRCxDQUFDO0FBRkQsNENBRUMifQ==