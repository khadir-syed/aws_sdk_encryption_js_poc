/*
 * Copyright 2019 Amazon.com, Inc. or its affiliates. All Rights Reserved.
 *
 * Licensed under the Apache License, Version 2.0 (the "License"). You may not use
 * this file except in compliance with the License. A copy of the License is
 * located at
 *
 *     http://aws.amazon.com/apache2.0/
 *
 * or in the "license" file accompanying this file. This file is distributed on an
 * "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
 * implied. See the License for the specific language governing permissions and
 * limitations under the License.
 */
import { readOnlyBinaryProperty, readOnlyProperty, frozenClass } from './immutable_class';
import { needs } from './needs';
export class EncryptedDataKey {
    constructor(edkInput) {
        const { providerInfo, providerId, encryptedDataKey, rawInfo } = edkInput;
        needs(typeof providerInfo === 'string' && providerInfo &&
            typeof providerId === 'string' && providerId &&
            encryptedDataKey instanceof Uint8Array && encryptedDataKey.byteLength, 'Malformed encrypted data key');
        readOnlyProperty(this, 'providerInfo', providerInfo);
        readOnlyProperty(this, 'providerId', providerId);
        readOnlyBinaryProperty(this, 'encryptedDataKey', encryptedDataKey);
        if (rawInfo instanceof Uint8Array) {
            readOnlyBinaryProperty(this, 'rawInfo', rawInfo);
        }
        else {
            readOnlyProperty(this, 'rawInfo', undefined);
        }
        Object.setPrototypeOf(this, EncryptedDataKey.prototype);
        Object.freeze(this);
    }
}
frozenClass(EncryptedDataKey);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZW5jcnlwdGVkX2RhdGFfa2V5LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vc3JjL2VuY3J5cHRlZF9kYXRhX2tleS50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTs7Ozs7Ozs7Ozs7OztHQWFHO0FBRUgsT0FBTyxFQUFFLHNCQUFzQixFQUFFLGdCQUFnQixFQUFFLFdBQVcsRUFBRSxNQUFNLG1CQUFtQixDQUFBO0FBQ3pGLE9BQU8sRUFBRSxLQUFLLEVBQUUsTUFBTSxTQUFTLENBQUE7QUErQi9CLE1BQU0sT0FBTyxnQkFBZ0I7SUFNM0IsWUFBYSxRQUEyQjtRQUN0QyxNQUFNLEVBQUUsWUFBWSxFQUFFLFVBQVUsRUFBRSxnQkFBZ0IsRUFBRSxPQUFPLEVBQUUsR0FBRyxRQUFRLENBQUE7UUFDeEUsS0FBSyxDQUNILE9BQU8sWUFBWSxLQUFLLFFBQVEsSUFBSSxZQUFZO1lBQ2hELE9BQU8sVUFBVSxLQUFLLFFBQVEsSUFBSSxVQUFVO1lBQzVDLGdCQUFnQixZQUFZLFVBQVUsSUFBSSxnQkFBZ0IsQ0FBQyxVQUFVLEVBQ3JFLDhCQUE4QixDQUFDLENBQUE7UUFFakMsZ0JBQWdCLENBQUMsSUFBSSxFQUFFLGNBQWMsRUFBRSxZQUFZLENBQUMsQ0FBQTtRQUNwRCxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUUsWUFBWSxFQUFFLFVBQVUsQ0FBQyxDQUFBO1FBQ2hELHNCQUFzQixDQUFDLElBQUksRUFBRSxrQkFBa0IsRUFBRSxnQkFBZ0IsQ0FBQyxDQUFBO1FBQ2xFLElBQUksT0FBTyxZQUFZLFVBQVUsRUFBRTtZQUNqQyxzQkFBc0IsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLE9BQU8sQ0FBQyxDQUFBO1NBQ2pEO2FBQU07WUFDTCxnQkFBZ0IsQ0FBQyxJQUFJLEVBQUUsU0FBUyxFQUFFLFNBQVMsQ0FBQyxDQUFBO1NBQzdDO1FBRUQsTUFBTSxDQUFDLGNBQWMsQ0FBQyxJQUFJLEVBQUUsZ0JBQWdCLENBQUMsU0FBUyxDQUFDLENBQUE7UUFDdkQsTUFBTSxDQUFDLE1BQU0sQ0FBQyxJQUFJLENBQUMsQ0FBQTtJQUNyQixDQUFDO0NBQ0Y7QUFFRCxXQUFXLENBQUMsZ0JBQWdCLENBQUMsQ0FBQSJ9